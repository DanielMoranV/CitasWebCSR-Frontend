import{E as U,C as r,a1 as y,a2 as p,a3 as m,a4 as u,a5 as w,a6 as f,a7 as n,a8 as D,a9 as P,aa as c,ab as b,ac as I,ad as z,ae as A,af as C}from"./index-7e3665c5.js";const S=U("datauserStore",{state:()=>({dataUser:r.getItem("collaborator"),loadingDataUser:!1,dependents:r.getItem("dependents"),patients:r.getItem("patients"),msg:null}),actions:{async createAccessUser(e,a){try{const{data:t}=await y(e,a);return r.setItem("collaborator",t),this.dataUser=t,this.dataUser}catch(t){return this.msg=t,this.msg}},async getCollaborators(){this.loadingDataUser=!0;try{const{data:e}=await p();return r.setItem("collaborator",e),this.dataUser=e,this.dataUser}catch(e){console.log(e)}finally{this.loadingDataUser=!1}},async getUsers(){this.loadingDataUser=!0;try{const{data:e}=await m();return this.dataUser=e,this.dataUser}catch(e){console.log(e)}finally{this.loadingDataUser=!1}},async getPatients(){this.loadingDataUser=!0;try{const{data:e}=await u();return r.setItem("patients",e),this.patients=e,this.patients}catch(e){console.log(e)}},async getUsersDependents(e){this.loadingDataUser=!0;try{const{data:a}=await w(e);return r.setItem("dependents",a.dependents),this.dependents=a.dependents,this.dependents}catch(a){console.log(a)}finally{this.loadingDataUser=!1}},async addUsersDependents(e){try{const{data:a}=await f(e);return a}catch(a){return console.log(a),a.message}},async updateUserDependents(e,a){try{const{data:t}=await n(e,a);this.dependents=this.dependents.map(s=>s.dependentId===e?{...s,...t}:s)}catch(t){console.log(t.message)}},async deleteUserDependents(e){try{await D(e),this.dataUser=this.dataUser.filter(a=>a.dni!==e)}catch(a){console.log(a.message)}finally{console.log("Finalizado")}},async addUsers(e){try{const{data:a}=await P(e);return this.dataUser=a,a}catch(a){return this.msg=a.message,this.msg}},async updateDoctor(e,a,t,s,o){try{const{access:i,Doctor:l,...d}=o,{personalizedPrices:g,...h}=l;await n(e,d),await c(a,i),await b(t,h),await I(s,g[0])}catch(i){console.log(i.message)}},async updateUser(e,a,t){try{console.log(t);const{access:s,...o}=t;await n(e,o),await c(a,s)}catch(s){console.log(s.message)}},async updatePatient(e,a,t){try{const{access:s,...o}=t;await n(e,o),await c(a,s)}catch(s){console.log(s.message)}},async disableUser(e){try{await c(e,{active:!1})}catch(a){console.log(a.message)}},async addPatients(e){try{const{data:a,message:t}=await z(e);this.dataUser=a,this.msg=t}catch(a){console.log(a),this.msg=a.message}},async profileUser(e){try{const{data:a}=await A(e);this.dataUser=a}catch(a){console.log(a.message)}finally{console.log("Finalizada la carga de datos del perfil")}},async deleteUser(e){try{await C(e),this.dataUser=this.dataUser.filter(a=>a.dni!==e)}catch(a){console.log(a.message)}finally{console.log("Finalizado")}}}});export{S as u};
